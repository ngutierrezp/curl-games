# Nginx config for serving Bash Curl Games
# Place this inside your server block or include as a separate file

# HTTPS server: redirect only to GitHub
server {
    listen 443 ssl;
    server_name games.ngutierrezp.cl;

    ssl_certificate /etc/letsencrypt/live/games.ngutierrezp.cl/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/games.ngutierrezp.cl/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    # Redirect / to the main GitHub repo
    location = / {
        return 301 https://github.com/ngutierrezp/curl-games;
    }

    # Redirect /game (and similar) to the corresponding GitHub folder
    location ~ ^/([a-zA-Z0-9_-]+)$ {
        return 301 https://github.com/ngutierrezp/curl-games/tree/main/$1;
    }
}

# HTTP server: serve all games dynamically
server {
    listen 80;
    server_name games.ngutierrezp.cl;

    # Serve any game script at /game if it exists
    location ~ ^/([a-zA-Z0-9_-]+)$ {
        set $game $1;
        if (-f /home/ubuntu/curl-games/$game/$game.sh) {
            default_type text/x-shellscript;
            alias /home/ubuntu/curl-games/$game/$game.sh;
            add_header Content-Disposition "inline; filename=$game.sh";
            break;
        }
        # If not found, redirect to error handler
        return 302 /error;
    }

    # Serve the main launcher at /
    location = / {
        default_type text/x-shellscript;
        alias /home/ubuntu/curl-games/main.sh;
        add_header Content-Disposition "inline; filename=main.sh";
    }

    # Error handler for not found games
    location = /error {
        default_type text/x-shellscript;
        alias /home/ubuntu/curl-games/error.sh;
        add_header Content-Disposition "inline; filename=error.sh";
    }
}
